/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { useRef } from 'react';
import { useFrame } from '@react-three/fiber';
import { useGLTF } from '@react-three/drei';
import { SkinnedMesh, BufferGeometry, Vector3 } from 'three';

const modelPath = require('../assets/models/avatar.glb');

type GLTF = ReturnType<typeof useGLTF> & { nodes: any; materials: any; animations: any };

export default function Model({ ...props }) {
  const { nodes, materials } = useGLTF(modelPath) as GLTF;
  const leftEye = useRef<SkinnedMesh<BufferGeometry>>(null);
  const rightEye = useRef<SkinnedMesh<BufferGeometry>>(null);
  const head = useRef<SkinnedMesh<BufferGeometry>>(null);
  const hair = useRef<SkinnedMesh<BufferGeometry>>(null);
  const glasses = useRef<SkinnedMesh<BufferGeometry>>(null);
  const teeth = useRef<SkinnedMesh<BufferGeometry>>(null);
  const top = useRef<SkinnedMesh<BufferGeometry>>(null);

  useFrame(({ mouse, viewport }) => {
    const x = (mouse.x * viewport.width);
    const y = (mouse.y * viewport.height);
    console.log({ x, y });
    leftEye.current?.lookAt(new Vector3(x, y - 1.5, 10));
    rightEye.current?.lookAt(new Vector3(x, y - 1.5, 10));
    head.current?.lookAt(new Vector3(x, y  - 1.5, 10));
    hair.current?.lookAt(new Vector3(x, y  - 1.5, 10));
    glasses.current?.lookAt(new Vector3(x, y  - 1.5, 10));
    teeth.current?.lookAt(new Vector3(x, y  - 1.5, 10));
    top.current?.lookAt(new Vector3(x, y  - 1.5, 10));
  });

  return (
    <group {...props} dispose={null}>
      <primitive object={nodes.Hips} />
      <mesh
        name="Wolf3D_Teeth"
        geometry={nodes.Wolf3D_Teeth.geometry}
        material={materials.Wolf3D_Teeth}
        /* skeleton={nodes.Wolf3D_Teeth.skeleton} */
        morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}
        morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}
        ref={teeth}
      />
      <mesh
        geometry={nodes.Wolf3D_Body.geometry}
        material={materials.Wolf3D_Body}
        /* skeleton={nodes.Wolf3D_Body.skeleton} */
      />
      <mesh
        geometry={nodes.Wolf3D_Glasses.geometry}
        material={materials.Wolf3D_Glasses}
        /* skeleton={nodes.Wolf3D_Glasses.skeleton} */
        ref={glasses}
      />
      <mesh
        geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
        material={materials.Wolf3D_Outfit_Bottom}
        /* skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton} */
      />
      <mesh
        name="EyeLeft"
        geometry={nodes.EyeLeft.geometry}
        material={materials.Wolf3D_Eye}
        /* skeleton={nodes.EyeLeft.skeleton} */
        morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}
        morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}
        ref={leftEye}
      />
      <mesh
        name="EyeRight"
        geometry={nodes.EyeRight.geometry}
        material={materials.Wolf3D_Eye}
        /* skeleton={nodes.EyeRight.skeleton} */
        morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}
        morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}
        ref={rightEye}
      />
      <mesh
        geometry={nodes.Wolf3D_Outfit_Top.geometry}
        material={materials.Wolf3D_Outfit_Top}
        /* skeleton={nodes.Wolf3D_Outfit_Top.skeleton} */
        ref={top}
      />
      <mesh
        geometry={nodes.Wolf3D_Hair.geometry}
        material={materials.Wolf3D_Hair}
        /* skeleton={nodes.Wolf3D_Hair.skeleton} */
        ref={hair}
      />
      <mesh
        geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
        material={materials.Wolf3D_Outfit_Footwear}
        /* skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton} */
      />
      <mesh
        name="Wolf3D_Head"
        geometry={nodes.Wolf3D_Head.geometry}
        material={materials.Wolf3D_Skin}
        /* skeleton={nodes.Wolf3D_Head.skeleton} */
        morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}
        morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}
        ref={head}
      />
    </group>
  );
}

useGLTF.preload('/avatar.glb');
